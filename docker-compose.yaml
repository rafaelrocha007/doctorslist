version: "3.7"

services:
  app:
    build: .
    container_name: app
    entrypoint: dockerize -template ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
    environment:
      - DB_HOST=db
      - DB_DATABASE=laravel
      - DB_USERNAME=root
      - DB_PASSWORD=root
    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - db
      - redis

  nginx:
    build:
      context: .docker/nginx
    container_name: nginx
    command: dockerize -template /var/www/.docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf -wait tcp://app:9000 -timeout 40s nginx -g "daemon off;"
    environment:
      - APP_URL=app
      - APP_PORT=9000
    restart: always
    tty: true
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - app

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    ports:
      - "33006:3306"
    volumes:
      - ./.docker/dbdata:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=laravel
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=root
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - 6379
    networks:
      - app-network

  # composer:
  #   image: rafaelrocha007/laravel
  #   container_name: composer
  #   volumes:
  #     - .:/var/www
  #   entrypoint:
  #     [
  #       "sh",
  #       "-c",
  #       "composer install && cp .env.example .env && php artisan key:generate && php artisan config:cache",
  #     ]
  # migration:
  #   image: rafaelrocha007/laravel
  #   container_name: migration
  #   volumes:
  #     - .:/var/www
  #   entrypoint: "php artisan migrate"
  #   depends_on:
  #     - db
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge
